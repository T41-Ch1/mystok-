# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - develop

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 18
    
    - name: Cache
      uses: actions/cache@v2.1.3
      with:
    # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.m2
    # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  publish-job:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: v14
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*.war staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging
  build-docker-image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Container Image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
      - name: Publish Docker Image
        run: docker push ${{ secrets.DOCKER_REPO }}
